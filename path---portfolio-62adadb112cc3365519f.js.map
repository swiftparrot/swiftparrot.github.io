{"version":3,"sources":["webpack:///path---portfolio-62adadb112cc3365519f.js","webpack:///./.cache/json/portfolio.json"],"names":["webpackJsonp","814","module","exports","data","page","id","html","frontmatter","title","footnote","site","siteMetadata","facebook","appId","pathContext","slug"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,GAAA,gGAAAC,KAAA,89MAAAC,aAA+lNC,MAAA,cAAqBC,UAAaJ,GAAA,sFAAAC,KAAA,IAAqGI,MAASC,cAAgBC,UAAYC,MAAA,OAAcC,aAAgBC,KAAA","file":"path---portfolio-62adadb112cc3365519f.js","sourcesContent":["webpackJsonp([192094587461937],{\n\n/***/ 814:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"page\":{\"id\":\"/home/cypress/website1/content/pages/2--portfolio/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>Some of my QA test automation projects..I have also included the main QA test cases and my QA test source code on github.</p>\\n<h1>Standardnotes.org - End to End Automation Tests</h1>\\n<p><a href=\\\"http://github.com/swiftparrot/standardnotes\\\">http://github.com/swiftparrot/standardnotes</a></p>\\n<h3>Test Cases</h3>\\n<h4>Tags Section</h4>\\n<ul>\\n<li>Verify Views</li>\\n<li>Verify Tags</li>\\n<li>Verify All notes</li>\\n<li>Verify Create a new tag</li>\\n</ul>\\n<h4>Notes Section</h4>\\n<ul>\\n<li>Verify All Notes</li>\\n<li>Verify Search</li>\\n<li>Verify Options </li>\\n<li>Verify Date Added</li>\\n<li>Options Menu - Verify Options</li>\\n<li>Options Menu - Verify Sort By</li>\\n<li>Options Menu - Verify Enable Reverse Sort</li>\\n<li>Options Menu - Verify Date Added</li>\\n<li>Options Menu - Verify Date Modified</li>\\n<li>Options Menu - Verify Title</li>\\n<li>Options Menu - Verify Display</li>\\n<li>Options Menu - Verify Archived Notes</li>\\n<li>Options Menu - Verify Pinned Notes</li>\\n<li>Options Menu - Verify Note Preview</li>\\n<li>Options Menu - Verify Date</li>\\n<li>Options Menu - Verify Tags</li>\\n<li>Options Menu - Verify Date Modified</li>\\n<li>Options Menu - Verify Date Modified</li>\\n</ul>\\n<h4>Editor Section</h4>\\n<ul>\\n<li>Verify Options</li>\\n<li>Verify Editor</li>\\n<li>Verify Actions</li>\\n<li>Verify Session History</li>\\n<li>Options Menu - Verify Note Options</li>\\n<li>Options Menu - Verify Pin</li>\\n<li>Options Menu - Verify Archive</li>\\n<li>Options Menu - Verify Lock</li>\\n<li>Options Menu - Verify Protect</li>\\n<li>Options Menu - Verify Preview</li>\\n<li>Options Menu - Verify Move to Trash</li>\\n<li>Options Menu - Verify Monospace Font</li>\\n<li>Options Menu - Verify Spellcheck</li>\\n<li>Options Menu - Verify Margin Reziser</li>\\n<li>Editor Menu - Verify Plain Editor</li>\\n<li>Editor Menu - Verify Download More Editors</li>\\n<li>Actions Menu - Verify Download Actions</li>\\n<li>Sessions History Menu - Verify Clear note local history</li>\\n<li>Sessions History Menu - Verify Clear all local history</li>\\n<li>Sessions History Menu - Verify Disable Auto cleanup</li>\\n<li>Sessions History Menu - Verify Enable Saving history to disk</li>\\n</ul>\\n<h4>Add a note</h4>\\n<ul>\\n<li>Verify Editor section displays Title</li>\\n<li>Verify Editor section displays Tag</li>\\n<li>Verify Editor section displays Content</li>\\n<li>Verify Notes section displays Title</li>\\n<li>Verify Notes section displays Tag</li>\\n<li>Verify Notes section displays Content</li>\\n</ul>\\n<h4>Pin a note</h4>\\n<ul>\\n<li>Verify Note section displays Pin status</li>\\n</ul>\\n<h4>Archive a note</h4>\\n<ul>\\n<li>Verify Note section displays Archive status</li>\\n</ul>\\n<h4>Add multiple notes</h4>\\n<ul>\\n<li>Verify Note sections displays all notes</li>\\n</ul>\\n<h4>Search</h4>\\n<ul>\\n<li>Verify Search works with Note Title</li>\\n</ul>\\n<h1>Conduit - End to End Automation Tests</h1>\\n<p><a href=\\\"http://github.com/swiftparrot/conduit\\\">http://github.com/swiftparrot/conduit</a></p>\\n<h3>Test Cases</h3>\\n<h4>Home page</h4>\\n<ul>\\n<li>Verify that home page is loaded</li>\\n<li>Verify Home</li>\\n<li>Verify Sign in</li>\\n<li>Verify Sign up</li>\\n<li>Verify Global Feed</li>\\n<li>Verify Popular Tags</li>\\n</ul>\\n<h4>Global Feed section</h4>\\n<ul>\\n<li>Verify that articles are displayed</li>\\n</ul>\\n<h4>Sign In page</h4>\\n<ul>\\n<li>Verify Sign in</li>\\n<li>Verify url</li>\\n<li>Verify sign in with incorrect username</li>\\n<li>Verify sign in with incorrect password</li>\\n<li>Verify sign in with blank username</li>\\n<li>Verify sign in with blank password</li>\\n</ul>\\n<h4>Sign up page</h4>\\n<ul>\\n<li>Verify url</li>\\n<li>Verify Signup</li>\\n<li>Sign up with an existing username - verify that it warns</li>\\n<li>Sign up with blank username</li>\\n<li>Sign up with blank password</li>\\n<li>Sign up with blank email address</li>\\n</ul>\\n<h4>Sign in page - link to Sign up</h4>\\n<ul>\\n<li>Verify that Sign up link shows on Sign in page</li>\\n</ul>\\n<h4>Sign up page - link to Sign in</h4>\\n<ul>\\n<li>Verify that Sign in link shows on Sign up page</li>\\n</ul>\\n<h4>Sign in successfully</h4>\\n<ul>\\n<li>Verify that page displays username</li>\\n<li>Verify Home</li>\\n<li>Verify New Article</li>\\n<li>Verify Settings</li>\\n<li>Verify Feed</li>\\n<li>Verify Global Feed</li>\\n</ul>\\n<h4>Clicking on logged in username</h4>\\n<ul>\\n<li>Verify My Articles</li>\\n<li>Verify Favorited Articles</li>\\n</ul>\\n<h4>Create new article</h4>\\n<ul>\\n<li>Verify Article Title</li>\\n<li>Verify Article Content section</li>\\n<li>Verify Article Tag</li>\\n<li>Verify Publish article</li>\\n<li>Verify the new article is displayed in the My Articles section</li>\\n<li>Verify that article can be deleted</li>\\n<li>Verify that article can be edited</li>\\n</ul>\\n<h4>Follow another user</h4>\\n<ul>\\n<li>Verify that the other user shows in the Your Feed section</li>\\n</ul>\\n<h4>UnFollow another user</h4>\\n<ul>\\n<li>Verify that the other user shows in the Your Feed section</li>\\n</ul>\\n<h1>Todo API - API Automation Tests</h1>\\n<p><a href=\\\"http://github.com/swiftparrot/todo\\\">http://github.com/swiftparrot/todo</a></p>\\n<h2>Test Cases</h2>\\n<h4>GET /todos</h4>\\n<ul>\\n<li>\\n<p>When there are no todos in the database, and then I add a todo item,  GET /todos API response body should have an array of length 1</p>\\n</li>\\n<li>\\n<p>When there are no todos and then i add a todo item,  GET /todos should list the item that i added</p>\\n</li>\\n<li>\\n<p>When there are no todos, GET /todos should return a list of zero length</p>\\n</li>\\n<li>\\n<p>When a todo item is available, GET /todos should return status code of 200</p>\\n</li>\\n</ul>\\n<h4>GET /todos/<id></h4>\\n<ul>\\n<li>\\n<p>When I have a todo item with id 105 in the database, GET /todos/105 API response should have the item with id 105</p>\\n</li>\\n<li>\\n<p>A GET /todos/<id> with an id that is not present in the database, should return a 404 http status code</p>\\n</li>\\n</ul>\\n<h4>POST /todos</h4>\\n<ul>\\n<li>Should be able to create a todo item</li>\\n<li>Should return a http status of 201 on success</li>\\n<li>Should create a todo item when the json data is sent in a different order</li>\\n<li>Should create a todo item with only a task property</li>\\n<li>Should create a todo item with a task that is an empty string</li>\\n</ul>\\n<h4>PUT /todos</h4>\\n<ul>\\n<li>Should be able to modify a todo</li>\\n<li>Should return a http status of 200 on succesful edit</li>\\n<li>Should give a 404 http status when trying to modify a todo item that does not exist</li>\\n</ul>\\n<h4>DELETE /todos/<id></h4>\\n<ul>\\n<li>Deletes an item</li>\\n<li>On successful delete, it should return status 200</li>\\n</ul>\",\"frontmatter\":{\"title\":\"Portfolio\"}},\"footnote\":{\"id\":\"/home/cypress/website1/content/parts/footnote.md absPath of file >>> MarkdownRemark\",\"html\":\"\"},\"site\":{\"siteMetadata\":{\"facebook\":{\"appId\":\"\"}}}},\"pathContext\":{\"slug\":\"/portfolio/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---portfolio-62adadb112cc3365519f.js","module.exports = {\"data\":{\"page\":{\"id\":\"/home/cypress/website1/content/pages/2--portfolio/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>Some of my QA test automation projects..I have also included the main QA test cases and my QA test source code on github.</p>\\n<h1>Standardnotes.org - End to End Automation Tests</h1>\\n<p><a href=\\\"http://github.com/swiftparrot/standardnotes\\\">http://github.com/swiftparrot/standardnotes</a></p>\\n<h3>Test Cases</h3>\\n<h4>Tags Section</h4>\\n<ul>\\n<li>Verify Views</li>\\n<li>Verify Tags</li>\\n<li>Verify All notes</li>\\n<li>Verify Create a new tag</li>\\n</ul>\\n<h4>Notes Section</h4>\\n<ul>\\n<li>Verify All Notes</li>\\n<li>Verify Search</li>\\n<li>Verify Options </li>\\n<li>Verify Date Added</li>\\n<li>Options Menu - Verify Options</li>\\n<li>Options Menu - Verify Sort By</li>\\n<li>Options Menu - Verify Enable Reverse Sort</li>\\n<li>Options Menu - Verify Date Added</li>\\n<li>Options Menu - Verify Date Modified</li>\\n<li>Options Menu - Verify Title</li>\\n<li>Options Menu - Verify Display</li>\\n<li>Options Menu - Verify Archived Notes</li>\\n<li>Options Menu - Verify Pinned Notes</li>\\n<li>Options Menu - Verify Note Preview</li>\\n<li>Options Menu - Verify Date</li>\\n<li>Options Menu - Verify Tags</li>\\n<li>Options Menu - Verify Date Modified</li>\\n<li>Options Menu - Verify Date Modified</li>\\n</ul>\\n<h4>Editor Section</h4>\\n<ul>\\n<li>Verify Options</li>\\n<li>Verify Editor</li>\\n<li>Verify Actions</li>\\n<li>Verify Session History</li>\\n<li>Options Menu - Verify Note Options</li>\\n<li>Options Menu - Verify Pin</li>\\n<li>Options Menu - Verify Archive</li>\\n<li>Options Menu - Verify Lock</li>\\n<li>Options Menu - Verify Protect</li>\\n<li>Options Menu - Verify Preview</li>\\n<li>Options Menu - Verify Move to Trash</li>\\n<li>Options Menu - Verify Monospace Font</li>\\n<li>Options Menu - Verify Spellcheck</li>\\n<li>Options Menu - Verify Margin Reziser</li>\\n<li>Editor Menu - Verify Plain Editor</li>\\n<li>Editor Menu - Verify Download More Editors</li>\\n<li>Actions Menu - Verify Download Actions</li>\\n<li>Sessions History Menu - Verify Clear note local history</li>\\n<li>Sessions History Menu - Verify Clear all local history</li>\\n<li>Sessions History Menu - Verify Disable Auto cleanup</li>\\n<li>Sessions History Menu - Verify Enable Saving history to disk</li>\\n</ul>\\n<h4>Add a note</h4>\\n<ul>\\n<li>Verify Editor section displays Title</li>\\n<li>Verify Editor section displays Tag</li>\\n<li>Verify Editor section displays Content</li>\\n<li>Verify Notes section displays Title</li>\\n<li>Verify Notes section displays Tag</li>\\n<li>Verify Notes section displays Content</li>\\n</ul>\\n<h4>Pin a note</h4>\\n<ul>\\n<li>Verify Note section displays Pin status</li>\\n</ul>\\n<h4>Archive a note</h4>\\n<ul>\\n<li>Verify Note section displays Archive status</li>\\n</ul>\\n<h4>Add multiple notes</h4>\\n<ul>\\n<li>Verify Note sections displays all notes</li>\\n</ul>\\n<h4>Search</h4>\\n<ul>\\n<li>Verify Search works with Note Title</li>\\n</ul>\\n<h1>Conduit - End to End Automation Tests</h1>\\n<p><a href=\\\"http://github.com/swiftparrot/conduit\\\">http://github.com/swiftparrot/conduit</a></p>\\n<h3>Test Cases</h3>\\n<h4>Home page</h4>\\n<ul>\\n<li>Verify that home page is loaded</li>\\n<li>Verify Home</li>\\n<li>Verify Sign in</li>\\n<li>Verify Sign up</li>\\n<li>Verify Global Feed</li>\\n<li>Verify Popular Tags</li>\\n</ul>\\n<h4>Global Feed section</h4>\\n<ul>\\n<li>Verify that articles are displayed</li>\\n</ul>\\n<h4>Sign In page</h4>\\n<ul>\\n<li>Verify Sign in</li>\\n<li>Verify url</li>\\n<li>Verify sign in with incorrect username</li>\\n<li>Verify sign in with incorrect password</li>\\n<li>Verify sign in with blank username</li>\\n<li>Verify sign in with blank password</li>\\n</ul>\\n<h4>Sign up page</h4>\\n<ul>\\n<li>Verify url</li>\\n<li>Verify Signup</li>\\n<li>Sign up with an existing username - verify that it warns</li>\\n<li>Sign up with blank username</li>\\n<li>Sign up with blank password</li>\\n<li>Sign up with blank email address</li>\\n</ul>\\n<h4>Sign in page - link to Sign up</h4>\\n<ul>\\n<li>Verify that Sign up link shows on Sign in page</li>\\n</ul>\\n<h4>Sign up page - link to Sign in</h4>\\n<ul>\\n<li>Verify that Sign in link shows on Sign up page</li>\\n</ul>\\n<h4>Sign in successfully</h4>\\n<ul>\\n<li>Verify that page displays username</li>\\n<li>Verify Home</li>\\n<li>Verify New Article</li>\\n<li>Verify Settings</li>\\n<li>Verify Feed</li>\\n<li>Verify Global Feed</li>\\n</ul>\\n<h4>Clicking on logged in username</h4>\\n<ul>\\n<li>Verify My Articles</li>\\n<li>Verify Favorited Articles</li>\\n</ul>\\n<h4>Create new article</h4>\\n<ul>\\n<li>Verify Article Title</li>\\n<li>Verify Article Content section</li>\\n<li>Verify Article Tag</li>\\n<li>Verify Publish article</li>\\n<li>Verify the new article is displayed in the My Articles section</li>\\n<li>Verify that article can be deleted</li>\\n<li>Verify that article can be edited</li>\\n</ul>\\n<h4>Follow another user</h4>\\n<ul>\\n<li>Verify that the other user shows in the Your Feed section</li>\\n</ul>\\n<h4>UnFollow another user</h4>\\n<ul>\\n<li>Verify that the other user shows in the Your Feed section</li>\\n</ul>\\n<h1>Todo API - API Automation Tests</h1>\\n<p><a href=\\\"http://github.com/swiftparrot/todo\\\">http://github.com/swiftparrot/todo</a></p>\\n<h2>Test Cases</h2>\\n<h4>GET /todos</h4>\\n<ul>\\n<li>\\n<p>When there are no todos in the database, and then I add a todo item,  GET /todos API response body should have an array of length 1</p>\\n</li>\\n<li>\\n<p>When there are no todos and then i add a todo item,  GET /todos should list the item that i added</p>\\n</li>\\n<li>\\n<p>When there are no todos, GET /todos should return a list of zero length</p>\\n</li>\\n<li>\\n<p>When a todo item is available, GET /todos should return status code of 200</p>\\n</li>\\n</ul>\\n<h4>GET /todos/<id></h4>\\n<ul>\\n<li>\\n<p>When I have a todo item with id 105 in the database, GET /todos/105 API response should have the item with id 105</p>\\n</li>\\n<li>\\n<p>A GET /todos/<id> with an id that is not present in the database, should return a 404 http status code</p>\\n</li>\\n</ul>\\n<h4>POST /todos</h4>\\n<ul>\\n<li>Should be able to create a todo item</li>\\n<li>Should return a http status of 201 on success</li>\\n<li>Should create a todo item when the json data is sent in a different order</li>\\n<li>Should create a todo item with only a task property</li>\\n<li>Should create a todo item with a task that is an empty string</li>\\n</ul>\\n<h4>PUT /todos</h4>\\n<ul>\\n<li>Should be able to modify a todo</li>\\n<li>Should return a http status of 200 on succesful edit</li>\\n<li>Should give a 404 http status when trying to modify a todo item that does not exist</li>\\n</ul>\\n<h4>DELETE /todos/<id></h4>\\n<ul>\\n<li>Deletes an item</li>\\n<li>On successful delete, it should return status 200</li>\\n</ul>\",\"frontmatter\":{\"title\":\"Portfolio\"}},\"footnote\":{\"id\":\"/home/cypress/website1/content/parts/footnote.md absPath of file >>> MarkdownRemark\",\"html\":\"\"},\"site\":{\"siteMetadata\":{\"facebook\":{\"appId\":\"\"}}}},\"pathContext\":{\"slug\":\"/portfolio/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/portfolio.json\n// module id = 814\n// module chunks = 192094587461937"],"sourceRoot":""}