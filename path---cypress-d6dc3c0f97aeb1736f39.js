webpackJsonp([0x9703323220f9],{797:function(s,n){s.exports={data:{page:{id:"/home/mathews/website1/content/pages/3--cypress/index.md absPath of file >>> MarkdownRemark",html:'<h2>should</h2>\n<div class="gatsby-highlight" data-language="bash">\n      <pre class="language-bash"><code class="language-bash">.should<span class="token punctuation">(</span><span class="token string">\'be.visible\'</span><span class="token punctuation">)</span>\n\n.should<span class="token punctuation">(</span><span class="token string">\'have.class\'</span>, <span class="token string">\'open\'</span><span class="token punctuation">)</span>  \n\n.should<span class="token punctuation">(</span><span class="token string">\'contain\'</span>, <span class="token string">\'Edit User\'</span><span class="token punctuation">)</span>\n\n.should<span class="token punctuation">(</span><span class="token string">\'have.attr\'</span>, <span class="token string">\'href\'</span><span class="token punctuation">)</span>  \n\n.should<span class="token punctuation">(</span><span class="token string">\'match\'</span>, /users/<span class="token punctuation">)</span>  \n\n.should<span class="token punctuation">(</span><span class="token string">\'not.be.empty\'</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<h2>expect</h2>\n<div class="gatsby-highlight" data-language="bash">\n      <pre class="language-bash"><code class="language-bash">expect<span class="token punctuation">(</span><span class="token variable">$p</span><span class="token punctuation">)</span>.to.have.length<span class="token punctuation">(</span>3<span class="token punctuation">)</span>\n\nexpect<span class="token punctuation">(</span><span class="token variable">$p</span>.first<span class="token punctuation">(</span><span class="token punctuation">))</span>.to.contain<span class="token punctuation">(</span><span class="token string">\'Hello World\'</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<h2>check</h2>\n<div class="gatsby-highlight" data-language="bash">\n      <pre class="language-bash"><code class="language-bash">cy.get<span class="token punctuation">(</span><span class="token string">\'[type="checkbox"]\'</span><span class="token punctuation">)</span>.check<span class="token punctuation">(</span><span class="token punctuation">)</span>  \n\ncy.get<span class="token punctuation">(</span><span class="token string">\'[type="radio"]\'</span><span class="token punctuation">)</span>.first<span class="token punctuation">(</span><span class="token punctuation">)</span>.check<span class="token punctuation">(</span><span class="token punctuation">)</span>  \n\ncy.get<span class="token punctuation">(</span><span class="token string">\'#saveUserName\'</span><span class="token punctuation">)</span>.check<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\ncy.get<span class="token punctuation">(</span><span class="token string">\'[type="radio"]\'</span><span class="token punctuation">)</span>.check<span class="token punctuation">(</span><span class="token string">\'US\'</span><span class="token punctuation">)</span>\n\ncy.get<span class="token punctuation">(</span><span class="token string">\'[type="checkbox"]\'</span><span class="token punctuation">)</span>.check<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">\'ga\'</span>, <span class="token string">\'ca\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n\ncy.get<span class="token punctuation">(</span><span class="token string">\'.action-checkboxes\'</span><span class="token punctuation">)</span>.should<span class="token punctuation">(</span><span class="token string">\'not.be.visible\'</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<h2>clear</h2>\n<div class="gatsby-highlight" data-language="bash">\n      <pre class="language-bash"><code class="language-bash">cy.get<span class="token punctuation">(</span><span class="token string">\'[type="text"]\'</span><span class="token punctuation">)</span>.clear<span class="token punctuation">(</span><span class="token punctuation">)</span>        // Clear text input\n\ncy.get<span class="token punctuation">(</span><span class="token string">\'textarea\'</span><span class="token punctuation">)</span>.type<span class="token punctuation">(</span><span class="token string">\'Hi!\'</span><span class="token punctuation">)</span>.clear<span class="token punctuation">(</span><span class="token punctuation">)</span> // Clear textarea\n\ncy.focused<span class="token punctuation">(</span><span class="token punctuation">)</span>.clear<span class="token punctuation">(</span><span class="token punctuation">)</span>                   // Clear focused input/textarea\n\ncy.get<span class="token punctuation">(</span><span class="token string">\'textarea\'</span><span class="token punctuation">)</span>.clear<span class="token punctuation">(</span><span class="token punctuation">)</span>.type<span class="token punctuation">(</span><span class="token string">\'Hello, World\'</span><span class="token punctuation">)</span>\n\ncy.get<span class="token punctuation">(</span><span class="token string">\'input[name="name"]\'</span><span class="token punctuation">)</span>.clear<span class="token punctuation">(</span><span class="token punctuation">)</span>.type<span class="token punctuation">(</span><span class="token string">\'Jane Lane\'</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<h2>click</h2>\n<div class="gatsby-highlight" data-language="bash">\n      <pre class="language-bash"><code class="language-bash">cy.get<span class="token punctuation">(</span><span class="token string">\'button\'</span><span class="token punctuation">)</span>.click<span class="token punctuation">(</span><span class="token punctuation">)</span>          // Click on button\n\ncy.focused<span class="token punctuation">(</span><span class="token punctuation">)</span>.click<span class="token punctuation">(</span><span class="token punctuation">)</span>              // Click on el with focus\n\ncy.contains<span class="token punctuation">(</span><span class="token string">\'Welcome\'</span><span class="token punctuation">)</span>.click<span class="token punctuation">(</span><span class="token punctuation">)</span>    // Click on first el containing <span class="token string">\'Welcome\'</span>\n\ncy.get<span class="token punctuation">(</span><span class="token string">\'button\'</span><span class="token punctuation">)</span>.click<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\ncy.get<span class="token punctuation">(</span><span class="token string">\'button\'</span><span class="token punctuation">)</span>.click<span class="token punctuation">(</span><span class="token punctuation">{</span> force: <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\ncy.get<span class="token punctuation">(</span><span class="token string">\'button\'</span><span class="token punctuation">)</span>.click<span class="token punctuation">(</span><span class="token punctuation">{</span> multiple: <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> // Click all buttons found on the page</code></pre>\n      </div>\n<h2>contains</h2>\n<div class="gatsby-highlight" data-language="bash">\n      <pre class="language-bash"><code class="language-bash">cy.get<span class="token punctuation">(</span><span class="token string">\'.nav\'</span><span class="token punctuation">)</span>.contains<span class="token punctuation">(</span><span class="token string">\'About\'</span><span class="token punctuation">)</span>  // Yield el <span class="token keyword">in</span> .nav containing <span class="token string">\'About\'</span>\n\ncy.contains<span class="token punctuation">(</span><span class="token string">\'Hello\'</span><span class="token punctuation">)</span>              // Yield first el <span class="token keyword">in</span> document containing <span class="token string">\'Hello\'</span></code></pre>\n      </div>\n<div class="gatsby-highlight" data-language="bash">\n      <pre class="language-bash"><code class="language-bash"><span class="token operator">&lt;</span>ul<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li<span class="token operator">></span>apples<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li<span class="token operator">></span>oranges<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li<span class="token operator">></span>bananas<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n<span class="token operator">&lt;</span>/ul<span class="token operator">></span>\n\n// yields <span class="token operator">&lt;</span>li<span class="token operator">></span>apples<span class="token operator">&lt;</span>/li<span class="token operator">></span>\ncy.contains<span class="token punctuation">(</span><span class="token string">\'apples\'</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<div class="gatsby-highlight" data-language="bash">\n      <pre class="language-bash"><code class="language-bash"><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"main"</span><span class="token operator">></span>\n  <span class="token operator">&lt;</span>form<span class="token operator">></span>\n    <span class="token operator">&lt;</span>div<span class="token operator">></span>\n      <span class="token operator">&lt;</span>label<span class="token operator">></span>name<span class="token operator">&lt;</span>/label<span class="token operator">></span>\n      <span class="token operator">&lt;</span>input name<span class="token operator">=</span><span class="token string">"name"</span> /<span class="token operator">></span>\n    <span class="token operator">&lt;</span>/div<span class="token operator">></span>\n    <span class="token operator">&lt;</span>div<span class="token operator">></span>\n      <span class="token operator">&lt;</span>label<span class="token operator">></span>age<span class="token operator">&lt;</span>/label<span class="token operator">></span>\n      <span class="token operator">&lt;</span>input name<span class="token operator">=</span><span class="token string">"age"</span> /<span class="token operator">></span>\n    <span class="token operator">&lt;</span>/div<span class="token operator">></span>\n    <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"submit"</span> value<span class="token operator">=</span><span class="token string">"submit the form!"</span> /<span class="token operator">></span>\n  <span class="token operator">&lt;</span>/form<span class="token operator">></span>\n<span class="token operator">&lt;</span>/div<span class="token operator">></span>\n\n// yields input<span class="token punctuation">[</span>type<span class="token operator">=</span><span class="token string">\'submit\'</span><span class="token punctuation">]</span> element <span class="token keyword">then</span> clicks it\ncy.get<span class="token punctuation">(</span><span class="token string">\'form\'</span><span class="token punctuation">)</span>.contains<span class="token punctuation">(</span><span class="token string">\'submit the form!\'</span><span class="token punctuation">)</span>.click<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<div class="gatsby-highlight" data-language="bash">\n      <pre class="language-bash"><code class="language-bash"><span class="token operator">&lt;</span>button class<span class="token operator">=</span><span class="token string">"btn btn-primary"</span> type<span class="token operator">=</span><span class="token string">"button"</span><span class="token operator">></span>\n  Messages <span class="token operator">&lt;</span>span class<span class="token operator">=</span><span class="token string">"badge"</span><span class="token operator">></span>4<span class="token operator">&lt;</span>/span<span class="token operator">></span>\n<span class="token operator">&lt;</span>/button<span class="token operator">></span>\n// yields <span class="token operator">&lt;</span>button<span class="token operator">></span>\ncy.contains<span class="token punctuation">(</span>4<span class="token punctuation">)</span></code></pre>\n      </div>\n<p><a href="https://docs.cypress.io/api/commands/contains.html#Selector">Specify a selector to return a specific element</a></p>\n<div class="gatsby-highlight" data-language="bash">\n      <pre class="language-bash"><code class="language-bash">Specify a selector to <span class="token keyword">return</span> a specific element\nTechnically the <span class="token operator">&lt;</span>html<span class="token operator">></span>, <span class="token operator">&lt;</span>body<span class="token operator">></span>, <span class="token operator">&lt;</span>ul<span class="token operator">></span>, and first <span class="token operator">&lt;</span>li<span class="token operator">></span> <span class="token keyword">in</span> the example below all contain “apples”.\nNormally Cypress would <span class="token keyword">return</span> the first <span class="token operator">&lt;</span>li<span class="token operator">></span> since that is the deepest element that contains “apples”.\nTo override the element that is yielded we can pass ‘ul’ as the selector.\n\n<span class="token operator">&lt;</span>html<span class="token operator">></span>\n  <span class="token operator">&lt;</span>body<span class="token operator">></span>\n    <span class="token operator">&lt;</span>ul<span class="token operator">></span>\n      <span class="token operator">&lt;</span>li<span class="token operator">></span>apples<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n      <span class="token operator">&lt;</span>li<span class="token operator">></span>oranges<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n      <span class="token operator">&lt;</span>li<span class="token operator">></span>bananas<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n    <span class="token operator">&lt;</span>/ul<span class="token operator">></span>\n  <span class="token operator">&lt;</span>/body<span class="token operator">></span>\n<span class="token operator">&lt;</span>/html<span class="token operator">></span>\n\n// yields <span class="token operator">&lt;</span>ul<span class="token operator">></span><span class="token punctuation">..</span>.<span class="token operator">&lt;</span>/ul<span class="token operator">></span>\ncy.contains<span class="token punctuation">(</span><span class="token string">\'ul\'</span>, <span class="token string">\'apples\'</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<div class="gatsby-highlight" data-language="bash">\n      <pre class="language-bash"><code class="language-bash">Keep the form as the subject\nHere’s an example that uses the selector to ensure that the <span class="token operator">&lt;</span>form<span class="token operator">></span> remains the subject <span class="token keyword">for</span> future chaining.\n\n<span class="token operator">&lt;</span>form<span class="token operator">></span>\n  <span class="token operator">&lt;</span>div<span class="token operator">></span>\n    <span class="token operator">&lt;</span>label<span class="token operator">></span>name<span class="token operator">&lt;</span>/label<span class="token operator">></span>\n    <span class="token operator">&lt;</span>input name<span class="token operator">=</span><span class="token string">"name"</span> /<span class="token operator">></span>\n  <span class="token operator">&lt;</span>/div<span class="token operator">></span>\n  <span class="token operator">&lt;</span>button type<span class="token operator">=</span><span class="token string">"submit"</span><span class="token operator">></span>Proceed<span class="token operator">&lt;</span>/button<span class="token operator">></span>\n<span class="token operator">&lt;</span>/form<span class="token operator">></span>\n\ncy.get<span class="token punctuation">(</span><span class="token string">\'form\'</span><span class="token punctuation">)</span>                  // yields <span class="token operator">&lt;</span>form<span class="token operator">></span><span class="token punctuation">..</span>.<span class="token operator">&lt;</span>/form<span class="token operator">></span>\n  .contains<span class="token punctuation">(</span><span class="token string">\'form\'</span>, <span class="token string">\'Proceed\'</span><span class="token punctuation">)</span>  // yields <span class="token operator">&lt;</span>form<span class="token operator">></span><span class="token punctuation">..</span>.<span class="token operator">&lt;</span>/form<span class="token operator">></span>\n  .submit<span class="token punctuation">(</span><span class="token punctuation">)</span>                     // yields <span class="token operator">&lt;</span>form<span class="token operator">></span><span class="token punctuation">..</span>.<span class="token operator">&lt;</span>/form<span class="token operator">></span></code></pre>\n      </div>\n<div class="gatsby-highlight" data-language="bash">\n      <pre class="language-bash"><code class="language-bash">cy.contains<span class="token punctuation">(</span><span class="token string">\'Log In\'</span><span class="token punctuation">)</span>\n\ncy.get<span class="token punctuation">(</span><span class="token string">\'#checkout-container\'</span><span class="token punctuation">)</span>.contains<span class="token punctuation">(</span><span class="token string">\'Buy Now\'</span><span class="token punctuation">)</span>\n\ncy.contains<span class="token punctuation">(</span><span class="token string">\'Delete User\'</span><span class="token punctuation">)</span>.click<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<p><a href="https://docs.cypress.io/api/commands/contains.html#Only-the-first-matched-element-will-be-returned">Only the first matched element will be returned</a></p>\n<div class="gatsby-highlight" data-language="bash">\n      <pre class="language-bash"><code class="language-bash"><span class="token operator">&lt;</span>ul id<span class="token operator">=</span><span class="token string">"header"</span><span class="token operator">></span>\n  <span class="token operator">&lt;</span>li<span class="token operator">></span>Welcome, Jane Lane<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n<span class="token operator">&lt;</span>/ul<span class="token operator">></span>\n<span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"main"</span><span class="token operator">></span>\n  <span class="token operator">&lt;</span>span<span class="token operator">></span>These <span class="token function">users</span> have 10 connections with Jane Lane<span class="token operator">&lt;</span>/span<span class="token operator">></span>\n  <span class="token operator">&lt;</span>ul<span class="token operator">></span>\n    <span class="token operator">&lt;</span>li<span class="token operator">></span>Jamal<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n    <span class="token operator">&lt;</span>li<span class="token operator">></span>Patricia<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>/ul<span class="token operator">></span>\n<span class="token operator">&lt;</span>/div<span class="token operator">></span>\n\nThe below example will <span class="token keyword">return</span> the <span class="token operator">&lt;</span>li<span class="token operator">></span> <span class="token keyword">in</span> the <span class="token comment">#header since that is the first element that contains the text “Jane Lane”.</span>\n// yields <span class="token comment">#header li</span>\ncy.contains<span class="token punctuation">(</span><span class="token string">\'Jane Lane\'</span><span class="token punctuation">)</span>\n\nIf you wanted to <span class="token keyword">select</span> the <span class="token operator">&lt;</span>span<span class="token operator">></span> instead, you could narrow the elements yielded before the .contains<span class="token punctuation">(</span><span class="token punctuation">)</span>.\n// yields <span class="token operator">&lt;</span>span<span class="token operator">></span>\ncy.get<span class="token punctuation">(</span><span class="token string">\'#main\'</span><span class="token punctuation">)</span>.contains<span class="token punctuation">(</span><span class="token string">\'Jane Lane\'</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<p><a href="https://docs.cypress.io/api/commands/contains.html#Favor-of-lt-a-gt-over-other-deeper-elements">Favor of &#x3C;a> over other deeper elements</a></p>\n<div class="gatsby-highlight" data-language="bash">\n      <pre class="language-bash"><code class="language-bash"><span class="token operator">&lt;</span>nav<span class="token operator">></span>\n  <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"/users"</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span>span<span class="token operator">></span>Users<span class="token operator">&lt;</span>/span<span class="token operator">></span>\n  <span class="token operator">&lt;</span>/a<span class="token operator">></span>\n  <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"/signout"</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span>span<span class="token operator">></span>Sign Out<span class="token operator">&lt;</span>/span<span class="token operator">></span>\n  <span class="token operator">&lt;</span>/a<span class="token operator">></span>\n<span class="token operator">&lt;</span>/nav<span class="token operator">></span>\n\n// yields <span class="token operator">&lt;</span>a<span class="token operator">></span>\ncy.get<span class="token punctuation">(</span><span class="token string">\'nav\'</span><span class="token punctuation">)</span>.contains<span class="token punctuation">(</span><span class="token string">\'Sign Out\'</span><span class="token punctuation">)</span>.should<span class="token punctuation">(</span><span class="token string">\'have.attr\'</span>, <span class="token string">\'href\'</span>, <span class="token string">\'/signout\'</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<h2>eq</h2>\n<div class="gatsby-highlight" data-language="bash">\n      <pre class="language-bash"><code class="language-bash">cy.get<span class="token punctuation">(</span><span class="token string">\'tbody>tr\'</span><span class="token punctuation">)</span>.eq<span class="token punctuation">(</span>0<span class="token punctuation">)</span>    // Yield first <span class="token string">\'tr\'</span> <span class="token keyword">in</span> <span class="token string">\'tbody\'</span>\n\ncy.get<span class="token punctuation">(</span><span class="token string">\'ul>li\'</span><span class="token punctuation">)</span>.eq<span class="token punctuation">(</span>4<span class="token punctuation">)</span>       // Yield fifth <span class="token string">\'li\'</span> <span class="token keyword">in</span> <span class="token string">\'ul\'</span>\n\n\nFind the 2nd element within the elements\n<span class="token operator">&lt;</span>ul<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li<span class="token operator">></span>tabby<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li<span class="token operator">></span>siamese<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li<span class="token operator">></span>persian<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li<span class="token operator">></span>sphynx<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li<span class="token operator">></span>burmese<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n<span class="token operator">&lt;</span>/ul<span class="token operator">></span>\ncy.get<span class="token punctuation">(</span><span class="token string">\'li\'</span><span class="token punctuation">)</span>.eq<span class="token punctuation">(</span>1<span class="token punctuation">)</span>.should<span class="token punctuation">(</span><span class="token string">\'contain\'</span>, <span class="token string">\'siamese\'</span><span class="token punctuation">)</span> // <span class="token boolean">true</span>\n\n\nMake an assertion on the 3rd row of a table\n<span class="token operator">&lt;</span>table<span class="token operator">></span>\n  <span class="token operator">&lt;</span>tr<span class="token operator">></span>\n    <span class="token operator">&lt;</span>th<span class="token operator">></span>Breed<span class="token operator">&lt;</span>/th<span class="token operator">></span>\n    <span class="token operator">&lt;</span>th<span class="token operator">></span>Origin<span class="token operator">&lt;</span>/th<span class="token operator">></span>\n  <span class="token operator">&lt;</span>/tr<span class="token operator">></span>\n  <span class="token operator">&lt;</span>tr<span class="token operator">></span>\n    <span class="token operator">&lt;</span>td<span class="token operator">></span>Siamese<span class="token operator">&lt;</span>/td<span class="token operator">></span>\n    <span class="token operator">&lt;</span>td<span class="token operator">></span>Thailand<span class="token operator">&lt;</span>/td<span class="token operator">></span>\n  <span class="token operator">&lt;</span>/tr<span class="token operator">></span>\n  <span class="token operator">&lt;</span>tr<span class="token operator">></span>\n    <span class="token operator">&lt;</span>td<span class="token operator">></span>Sphynx<span class="token operator">&lt;</span>/td<span class="token operator">></span>\n    <span class="token operator">&lt;</span>td<span class="token operator">></span>Canada<span class="token operator">&lt;</span>/td<span class="token operator">></span>\n  <span class="token operator">&lt;</span>/tr<span class="token operator">></span>\n  <span class="token operator">&lt;</span>tr<span class="token operator">></span>\n    <span class="token operator">&lt;</span>td<span class="token operator">></span>Persian<span class="token operator">&lt;</span>/td<span class="token operator">></span>\n    <span class="token operator">&lt;</span>td<span class="token operator">></span>Iran<span class="token operator">&lt;</span>/td<span class="token operator">></span>\n<span class="token operator">&lt;</span>/table<span class="token operator">></span>\ncy.get<span class="token punctuation">(</span><span class="token string">\'tr\'</span><span class="token punctuation">)</span>.eq<span class="token punctuation">(</span>2<span class="token punctuation">)</span>.should<span class="token punctuation">(</span><span class="token string">\'contain\'</span>, <span class="token string">\'Canada\'</span><span class="token punctuation">)</span>  //true\n\n\nFind the 2nd from the last element within the elements\n<span class="token operator">&lt;</span>ul<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li<span class="token operator">></span>tabby<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li<span class="token operator">></span>siamese<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li<span class="token operator">></span>persian<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li<span class="token operator">></span>sphynx<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li<span class="token operator">></span>burmese<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n<span class="token operator">&lt;</span>/ul<span class="token operator">></span>\ncy.get<span class="token punctuation">(</span><span class="token string">\'li\'</span><span class="token punctuation">)</span>.eq<span class="token punctuation">(</span>-2<span class="token punctuation">)</span>.should<span class="token punctuation">(</span><span class="token string">\'contain\'</span>, <span class="token string">\'sphynx\'</span><span class="token punctuation">)</span> // <span class="token boolean">true</span>\n\n\nFind the 4th <span class="token operator">&lt;</span>li<span class="token operator">></span> <span class="token keyword">in</span> the navigation\n\ncy.get<span class="token punctuation">(</span><span class="token string">\'.left-nav.nav\'</span><span class="token punctuation">)</span>.find<span class="token punctuation">(</span><span class="token string">\'>li\'</span><span class="token punctuation">)</span>.eq<span class="token punctuation">(</span>3<span class="token punctuation">)</span></code></pre>\n      </div>\n<h2>filter</h2>\n<div class="gatsby-highlight" data-language="bash">\n      <pre class="language-bash"><code class="language-bash">cy.get<span class="token punctuation">(</span><span class="token string">\'td\'</span><span class="token punctuation">)</span>.filter<span class="token punctuation">(</span><span class="token string">\'.users\'</span><span class="token punctuation">)</span> // Yield all el<span class="token string">\'s with class \'</span>.users<span class="token string">\'\n\n\nFilter the current subject to the elements with the class ‘active’\n&lt;ul>\n  &lt;li>Home&lt;/li>\n  &lt;li class="active">About&lt;/li>\n  &lt;li>Services&lt;/li>\n  &lt;li>Pricing&lt;/li>\n  &lt;li>Contact&lt;/li>\n&lt;/ul>\n// yields &lt;li>About&lt;/li>\ncy.get(\'</span>ul<span class="token string">\').find(\'</span><span class="token operator">></span>li<span class="token string">\').filter(\'</span>.active<span class="token string">\')\n\n\ncy.get(\'</span>.left-nav<span class="token operator">></span>.nav<span class="token string">\').find(\'</span><span class="token operator">></span>li<span class="token string">\').filter(\'</span>.active\'<span class="token punctuation">)</span></code></pre>\n      </div>\n<h2>find</h2>\n<div class="gatsby-highlight" data-language="bash">\n      <pre class="language-bash"><code class="language-bash">cy.get<span class="token punctuation">(</span><span class="token string">\'.article\'</span><span class="token punctuation">)</span>.find<span class="token punctuation">(</span><span class="token string">\'footer\'</span><span class="token punctuation">)</span> // Yield <span class="token string">\'footer\'</span> within <span class="token string">\'.article\'</span>\n\n\nGet li’s within parent\n<span class="token operator">&lt;</span>ul id<span class="token operator">=</span><span class="token string">"parent"</span><span class="token operator">></span>\n  <span class="token operator">&lt;</span>li class<span class="token operator">=</span><span class="token string">"first"</span><span class="token operator">></span><span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li class<span class="token operator">=</span><span class="token string">"second"</span><span class="token operator">></span><span class="token operator">&lt;</span>/li<span class="token operator">></span>\n<span class="token operator">&lt;</span>/ul<span class="token operator">></span>\n// yields <span class="token punctuation">[</span><span class="token operator">&lt;</span>li class<span class="token operator">=</span><span class="token string">"first"</span><span class="token operator">></span><span class="token operator">&lt;</span>/li<span class="token operator">></span>, <span class="token operator">&lt;</span>li class<span class="token operator">=</span><span class="token string">"second"</span><span class="token operator">></span><span class="token operator">&lt;</span>/li<span class="token operator">></span><span class="token punctuation">]</span>\ncy.get<span class="token punctuation">(</span><span class="token string">\'#parent\'</span><span class="token punctuation">)</span>.find<span class="token punctuation">(</span><span class="token string">\'li\'</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<h2>first</h2>\n<div class="gatsby-highlight" data-language="bash">\n      <pre class="language-bash"><code class="language-bash">cy.get<span class="token punctuation">(</span><span class="token string">\'nav a\'</span><span class="token punctuation">)</span>.first<span class="token punctuation">(</span><span class="token punctuation">)</span>     // Yield first <span class="token function">link</span> <span class="token keyword">in</span> nav\n\nGet the first list item <span class="token keyword">in</span> a list\n<span class="token operator">&lt;</span>ul<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li class<span class="token operator">=</span><span class="token string">"one"</span><span class="token operator">></span>Knick knack on my thumb<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li class<span class="token operator">=</span><span class="token string">"two"</span><span class="token operator">></span>Knick knack on my shoe<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li class<span class="token operator">=</span><span class="token string">"three"</span><span class="token operator">></span>Knick knack on my knee<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li class<span class="token operator">=</span><span class="token string">"four"</span><span class="token operator">></span>Knick knack on my door<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n<span class="token operator">&lt;</span>/ul<span class="token operator">></span>\n// yields <span class="token operator">&lt;</span>li class<span class="token operator">=</span><span class="token string">"one"</span><span class="token operator">></span>Knick knack on my thumb<span class="token operator">&lt;</span>/li<span class="token operator">></span>\ncy.get<span class="token punctuation">(</span><span class="token string">\'li\'</span><span class="token punctuation">)</span>.first<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\nFind the first input <span class="token keyword">in</span> the form\n\ncy.get<span class="token punctuation">(</span><span class="token string">\'form\'</span><span class="token punctuation">)</span>.find<span class="token punctuation">(</span><span class="token string">\'input\'</span><span class="token punctuation">)</span>.first<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<h2>focus</h2>\n<div class="gatsby-highlight" data-language="bash">\n      <pre class="language-bash"><code class="language-bash">cy.get<span class="token punctuation">(</span><span class="token string">\'input\'</span><span class="token punctuation">)</span>.first<span class="token punctuation">(</span><span class="token punctuation">)</span>.focus<span class="token punctuation">(</span><span class="token punctuation">)</span> // Focus on the first input\n\nFocus on an input\ncy.get<span class="token punctuation">(</span><span class="token string">\'[type="input"]\'</span><span class="token punctuation">)</span>.focus<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\nFocus, type, and blur a textarea\n// yields the <span class="token operator">&lt;</span>textarea<span class="token operator">></span> <span class="token keyword">for</span> further chaining\ncy.get<span class="token punctuation">(</span><span class="token string">\'textarea\'</span><span class="token punctuation">)</span>.focus<span class="token punctuation">(</span><span class="token punctuation">)</span>.type<span class="token punctuation">(</span><span class="token string">\'Nice Product!\'</span><span class="token punctuation">)</span>.blur<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\nFocus the textarea\ncy.get<span class="token punctuation">(</span><span class="token string">\'[name="comment"]\'</span><span class="token punctuation">)</span>.focus<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<h2>cy.get</h2>\n<div class="gatsby-highlight" data-language="bash">\n      <pre class="language-bash"><code class="language-bash">cy.get<span class="token punctuation">(</span><span class="token string">\'.err\'</span><span class="token punctuation">)</span>\n\ncy.get<span class="token punctuation">(</span><span class="token string">\'#header a\'</span><span class="token punctuation">)</span>\n\ncy.get<span class="token punctuation">(</span><span class="token string">\'button[type=submit]\'</span><span class="token punctuation">)</span>\n\ncy.get<span class="token punctuation">(</span><span class="token string">\'form\'</span><span class="token punctuation">)</span>.submit<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\ncy.get<span class="token punctuation">(</span><span class="token string">\'[type="email"]\'</span><span class="token punctuation">)</span>\n\ncy.get<span class="token punctuation">(</span><span class="token string">\'[name="comment"]\'</span><span class="token punctuation">)</span>\n\ncy.get<span class="token punctuation">(</span><span class="token string">\'input:first\'</span><span class="token punctuation">)</span>\n\ncy.get<span class="token punctuation">(</span><span class="token string">\'[type="checkbox"]\'</span><span class="token punctuation">)</span>\n\ncy.get<span class="token punctuation">(</span><span class="token string">\'[type="radio"]\'</span><span class="token punctuation">)</span>\n\ncy.get<span class="token punctuation">(</span><span class="token string">\'[name="comment"]\'</span><span class="token punctuation">)</span>.focus<span class="token punctuation">(</span><span class="token punctuation">)</span>.type<span class="token punctuation">(</span><span class="token string">\'Nice Product!\'</span><span class="token punctuation">)</span>\n\nGet an input and assert on the value\ncy.get<span class="token punctuation">(</span><span class="token string">\'input[name="firstName"]\'</span><span class="token punctuation">)</span>.should<span class="token punctuation">(</span><span class="token string">\'have.value\'</span>, <span class="token string">\'Homer\'</span><span class="token punctuation">)</span>\n\nGet the input element\ncy.get<span class="token punctuation">(</span><span class="token string">\'input\'</span><span class="token punctuation">)</span>.should<span class="token punctuation">(</span><span class="token string">\'be.disabled\'</span><span class="token punctuation">)</span>\n\nFind the first li descendent within a ul\ncy.get<span class="token punctuation">(</span><span class="token string">\'ul li:first\'</span><span class="token punctuation">)</span>.should<span class="token punctuation">(</span><span class="token string">\'have.class\'</span>, <span class="token string">\'active\'</span><span class="token punctuation">)</span>\n\nFind the dropdown-menu and click it\ncy.get<span class="token punctuation">(</span><span class="token string">\'.dropdown-menu\'</span><span class="token punctuation">)</span>.click<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\nFind 5 elements with the given data attribute\ncy.get<span class="token punctuation">(</span><span class="token string">\'[data-test-id="test-example"]\'</span><span class="token punctuation">)</span>.should<span class="token punctuation">(</span><span class="token string">\'have.length\'</span>, 5<span class="token punctuation">)</span></code></pre>\n      </div>\n<h2>its</h2>\n<div class="gatsby-highlight" data-language="bash">\n      <pre class="language-bash"><code class="language-bash">cy.wrap<span class="token punctuation">(</span><span class="token punctuation">{</span> width: <span class="token string">\'50\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>.its<span class="token punctuation">(</span><span class="token string">\'width\'</span><span class="token punctuation">)</span> // Get the <span class="token string">\'width\'</span> property\n\nGet property\ncy.wrap<span class="token punctuation">(</span><span class="token punctuation">{</span> age: 52 <span class="token punctuation">}</span><span class="token punctuation">)</span>.its<span class="token punctuation">(</span><span class="token string">\'age\'</span><span class="token punctuation">)</span>.should<span class="token punctuation">(</span><span class="token string">\'eq\'</span>, 52<span class="token punctuation">)</span> // <span class="token boolean">true</span>\n\n\nGet property\ncy.wrap<span class="token punctuation">(</span><span class="token punctuation">{</span> age: 52 <span class="token punctuation">}</span><span class="token punctuation">)</span>.its<span class="token punctuation">(</span><span class="token string">\'age\'</span><span class="token punctuation">)</span>.should<span class="token punctuation">(</span><span class="token string">\'eq\'</span>, 52<span class="token punctuation">)</span> // <span class="token boolean">true</span>\n\n\nGet the user object of the response’s body\ncy\n  .request<span class="token punctuation">(</span><span class="token punctuation">..</span>.<span class="token punctuation">)</span>\n  .its<span class="token punctuation">(</span><span class="token string">\'body.user\'</span><span class="token punctuation">)</span>\n  .then<span class="token punctuation">(</span>user <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">..</span>.<span class="token punctuation">)</span>\n\nalternatively, use destructuring\ncy\n  .request<span class="token punctuation">(</span><span class="token punctuation">..</span>.<span class="token punctuation">)</span>\n  .its<span class="token punctuation">(</span><span class="token string">\'body\'</span><span class="token punctuation">)</span>\n  .then<span class="token punctuation">((</span><span class="token punctuation">{</span>user<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">..</span>.<span class="token punctuation">)</span>\n\nGet length of title\ncy.title<span class="token punctuation">(</span><span class="token punctuation">)</span>.its<span class="token punctuation">(</span><span class="token string">\'length\'</span><span class="token punctuation">)</span>.should<span class="token punctuation">(</span><span class="token string">\'eq\'</span>, 24<span class="token punctuation">)</span>\n\nYou can drill into nested properties by using dot notation.\n\nconst user <span class="token operator">=</span> <span class="token punctuation">{</span>\n  contacts: <span class="token punctuation">{</span>\n    work: <span class="token punctuation">{</span>\n      name: <span class="token string">\'Kamil\'</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\ncy.wrap<span class="token punctuation">(</span>user<span class="token punctuation">)</span>.its<span class="token punctuation">(</span><span class="token string">\'contacts.work.name\'</span><span class="token punctuation">)</span>.should<span class="token punctuation">(</span><span class="token string">\'eq\'</span>, <span class="token string">\'Kamil\'</span><span class="token punctuation">)</span> // <span class="token boolean">true</span></code></pre>\n      </div>\n<h2>last</h2>\n<div class="gatsby-highlight" data-language="bash">\n      <pre class="language-bash"><code class="language-bash">cy.get<span class="token punctuation">(</span><span class="token string">\'nav a\'</span><span class="token punctuation">)</span>.last<span class="token punctuation">(</span><span class="token punctuation">)</span>     // Yield last <span class="token function">link</span> <span class="token keyword">in</span> nav\n\nGet the last list item <span class="token keyword">in</span> a list\n<span class="token operator">&lt;</span>ul<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li class<span class="token operator">=</span><span class="token string">"one"</span><span class="token operator">></span>Knick knack on my thumb<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li class<span class="token operator">=</span><span class="token string">"two"</span><span class="token operator">></span>Knick knack on my shoe<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li class<span class="token operator">=</span><span class="token string">"three"</span><span class="token operator">></span>Knick knack on my knee<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li class<span class="token operator">=</span><span class="token string">"four"</span><span class="token operator">></span>Knick knack on my door<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n<span class="token operator">&lt;</span>/ul<span class="token operator">></span>\n\n// yields <span class="token operator">&lt;</span>li class<span class="token operator">=</span><span class="token string">"four"</span><span class="token operator">></span>Knick knack on my door<span class="token operator">&lt;</span>/li<span class="token operator">></span>\ncy.get<span class="token punctuation">(</span><span class="token string">\'li\'</span><span class="token punctuation">)</span>.last<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n\nFind the last button <span class="token keyword">in</span> the form\ncy.get<span class="token punctuation">(</span><span class="token string">\'form\'</span><span class="token punctuation">)</span>.find<span class="token punctuation">(</span><span class="token string">\'button\'</span><span class="token punctuation">)</span>.last<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<h2>next</h2>\n<div class="gatsby-highlight" data-language="bash">\n      <pre class="language-bash"><code class="language-bash">cy.get<span class="token punctuation">(</span><span class="token string">\'nav a:first\'</span><span class="token punctuation">)</span>.next<span class="token punctuation">(</span><span class="token punctuation">)</span> // Yield next <span class="token function">link</span> <span class="token keyword">in</span> nav\n\nFind the element next to .second\n<span class="token operator">&lt;</span>ul<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li<span class="token operator">></span>apples<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li class<span class="token operator">=</span><span class="token string">"second"</span><span class="token operator">></span>oranges<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li<span class="token operator">></span>bananas<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n<span class="token operator">&lt;</span>/ul<span class="token operator">></span>\n\n// yields <span class="token operator">&lt;</span>li<span class="token operator">></span>bananas<span class="token operator">&lt;</span>/li<span class="token operator">></span>\ncy.get<span class="token punctuation">(</span><span class="token string">\'.second\'</span><span class="token punctuation">)</span>.next<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\nFind the very next sibling of each li. Keep only the ones with a class selected\n<span class="token operator">&lt;</span>ul<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li<span class="token operator">></span>apples<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li<span class="token operator">></span>oranges<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li<span class="token operator">></span>bananas<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li class<span class="token operator">=</span><span class="token string">"selected"</span><span class="token operator">></span>pineapples<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n<span class="token operator">&lt;</span>/ul<span class="token operator">></span>\n\n// yields <span class="token operator">&lt;</span>li<span class="token operator">></span>pineapples<span class="token operator">&lt;</span>/li<span class="token operator">></span>\ncy.get<span class="token punctuation">(</span><span class="token string">\'li\'</span><span class="token punctuation">)</span>.next<span class="token punctuation">(</span><span class="token string">\'.selected\'</span><span class="token punctuation">)</span>\n\n\nFind the element next to the .active li\ncy.get<span class="token punctuation">(</span><span class="token string">\'.left-nav\'</span><span class="token punctuation">)</span>.find<span class="token punctuation">(</span><span class="token string">\'li.active\'</span><span class="token punctuation">)</span>.next<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<h2>nextAll</h2>\n<div class="gatsby-highlight" data-language="bash">\n      <pre class="language-bash"><code class="language-bash">cy.get<span class="token punctuation">(</span><span class="token string">\'.active\'</span><span class="token punctuation">)</span>.nextAll<span class="token punctuation">(</span><span class="token punctuation">)</span> // Yield all links next to <span class="token variable"><span class="token variable">`</span>.active<span class="token variable">`</span></span>\n\nFind all of the element’s siblings following .second\n<span class="token operator">&lt;</span>ul<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li<span class="token operator">></span>apples<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li class<span class="token operator">=</span><span class="token string">"second"</span><span class="token operator">></span>oranges<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li<span class="token operator">></span>bananas<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li<span class="token operator">></span>pineapples<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li<span class="token operator">></span>grapes<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n<span class="token operator">&lt;</span>/ul<span class="token operator">></span>\n\n// yields <span class="token punctuation">[</span><span class="token operator">&lt;</span>li<span class="token operator">></span>bananas<span class="token operator">&lt;</span>/li<span class="token operator">></span>, <span class="token operator">&lt;</span>li<span class="token operator">></span>pineapples<span class="token operator">&lt;</span>/li<span class="token operator">></span>, <span class="token operator">&lt;</span>li<span class="token operator">></span>grapes<span class="token operator">&lt;</span>/li<span class="token operator">></span><span class="token punctuation">]</span>\ncy.get<span class="token punctuation">(</span><span class="token string">\'.second\'</span><span class="token punctuation">)</span>.nextAll<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\nFind all of the following siblings of each li. Keep only the ones with a class selected\n<span class="token operator">&lt;</span>ul<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li<span class="token operator">></span>apples<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li<span class="token operator">></span>oranges<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li<span class="token operator">></span>bananas<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li class<span class="token operator">=</span><span class="token string">"selected"</span><span class="token operator">></span>pineapples<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li<span class="token operator">></span>grapes<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n<span class="token operator">&lt;</span>/ul<span class="token operator">></span>\n\n// yields <span class="token operator">&lt;</span>li<span class="token operator">></span>pineapples<span class="token operator">&lt;</span>/li<span class="token operator">></span>\ncy.get<span class="token punctuation">(</span><span class="token string">\'li\'</span><span class="token punctuation">)</span>.nextAll<span class="token punctuation">(</span><span class="token string">\'.selected\'</span><span class="token punctuation">)</span>\n\nFind all elements following the .active li\ncy.get<span class="token punctuation">(</span><span class="token string">\'.left-nav\'</span><span class="token punctuation">)</span>.find<span class="token punctuation">(</span><span class="token string">\'li.active\'</span><span class="token punctuation">)</span>.nextAll<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<h2>nextUntil</h2>\n<div class="gatsby-highlight" data-language="bash">\n      <pre class="language-bash"><code class="language-bash">cy.get<span class="token punctuation">(</span><span class="token string">\'div\'</span><span class="token punctuation">)</span>.nextUntil<span class="token punctuation">(</span><span class="token string">\'.warning\'</span><span class="token punctuation">)</span> // Yield siblings after <span class="token string">\'div\'</span> <span class="token keyword">until</span> <span class="token string">\'.warning\'</span>\n\nFind all of the element’s siblings following <span class="token comment">#veggies until #nuts</span>\n<span class="token operator">&lt;</span>ul<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li id<span class="token operator">=</span><span class="token string">"fruits"</span> class<span class="token operator">=</span><span class="token string">"header"</span><span class="token operator">></span>Fruits<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li<span class="token operator">></span>apples<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li<span class="token operator">></span>oranges<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li<span class="token operator">></span>bananas<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li id<span class="token operator">=</span><span class="token string">"veggies"</span> class<span class="token operator">=</span><span class="token string">"header"</span><span class="token operator">></span>Vegetables<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li<span class="token operator">></span>cucumbers<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li<span class="token operator">></span>carrots<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li<span class="token operator">></span>corn<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li id<span class="token operator">=</span><span class="token string">"nuts"</span> class<span class="token operator">=</span><span class="token string">"header"</span><span class="token operator">></span>Nuts<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li<span class="token operator">></span>walnuts<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li<span class="token operator">></span>cashews<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li<span class="token operator">></span>almonds<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n<span class="token operator">&lt;</span>/ul<span class="token operator">></span>\n\n//returns <span class="token punctuation">[</span><span class="token operator">&lt;</span>li<span class="token operator">></span>cucumbers<span class="token operator">&lt;</span>/li<span class="token operator">></span>, <span class="token operator">&lt;</span>li<span class="token operator">></span>carrots<span class="token operator">&lt;</span>/li<span class="token operator">></span>, <span class="token operator">&lt;</span>li<span class="token operator">></span>corn<span class="token operator">&lt;</span>/li<span class="token operator">></span><span class="token punctuation">]</span>\ncy.get<span class="token punctuation">(</span><span class="token string">\'#veggies\'</span><span class="token punctuation">)</span>.nextUntil<span class="token punctuation">(</span><span class="token string">\'#nuts\'</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<h2>not</h2>\n<div class="gatsby-highlight" data-language="bash">\n      <pre class="language-bash"><code class="language-bash">cy.get<span class="token punctuation">(</span><span class="token string">\'input\'</span><span class="token punctuation">)</span>.not<span class="token punctuation">(</span><span class="token string">\'.required\'</span><span class="token punctuation">)</span> // Yield all inputs without class <span class="token string">\'.required\'</span>\n\nYield the elements that <span class="token keyword">do</span> not have class active\n<span class="token operator">&lt;</span>ul<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li<span class="token operator">></span>Home<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li class<span class="token operator">=</span><span class="token string">\'active\'</span><span class="token operator">></span>About<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li<span class="token operator">></span>Services<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li<span class="token operator">></span>Pricing<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n  <span class="token operator">&lt;</span>li<span class="token operator">></span>Contact<span class="token operator">&lt;</span>/li<span class="token operator">></span>\n<span class="token operator">&lt;</span>/ul<span class="token operator">></span>\n\ncy.get<span class="token punctuation">(</span><span class="token string">\'ul>li\'</span><span class="token punctuation">)</span>.not<span class="token punctuation">(</span><span class="token string">\'.active\'</span><span class="token punctuation">)</span>.should<span class="token punctuation">(</span><span class="token string">\'have.length\'</span>, 4<span class="token punctuation">)</span> // <span class="token boolean">true</span>\n\nFind all buttons that are not of <span class="token function">type</span> submit\ncy.get<span class="token punctuation">(</span><span class="token string">\'form\'</span><span class="token punctuation">)</span>.find<span class="token punctuation">(</span><span class="token string">\'button\'</span><span class="token punctuation">)</span>.not<span class="token punctuation">(</span><span class="token string">\'[type="submit"]\'</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<h2>parent</h2>\n<div class="gatsby-highlight" data-language="bash">\n      <pre class="language-bash"><code class="language-bash">cy.get<span class="token punctuation">(</span><span class="token string">\'header\'</span><span class="token punctuation">)</span>.parent<span class="token punctuation">(</span><span class="token punctuation">)</span> // Yield parent el of <span class="token variable"><span class="token variable">`</span>header<span class="token variable">`</span></span>\n\nGet the parent of the active li\ncy.get<span class="token punctuation">(</span><span class="token string">\'li.active\'</span><span class="token punctuation">)</span>.parent<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\nGet the parent with class nav of the active li\ncy.get<span class="token punctuation">(</span><span class="token string">\'li.active\'</span><span class="token punctuation">)</span>.parent<span class="token punctuation">(</span><span class="token string">\'.nav\'</span><span class="token punctuation">)</span>\n\nAssert on the parent of the active li\ncy.get<span class="token punctuation">(</span><span class="token string">\'li.active\'</span><span class="token punctuation">)</span>.parent<span class="token punctuation">(</span><span class="token punctuation">)</span>.should<span class="token punctuation">(</span><span class="token string">\'have.class\'</span>, <span class="token string">\'nav\'</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<h2></h2>\n<div class="gatsby-highlight" data-language="bash">\n      <pre class="language-bash"><code class="language-bash"></code></pre>\n      </div>\n<h2></h2>\n<div class="gatsby-highlight" data-language="bash">\n      <pre class="language-bash"><code class="language-bash"></code></pre>\n      </div>\n<h2></h2>\n<div class="gatsby-highlight" data-language="bash">\n      <pre class="language-bash"><code class="language-bash"></code></pre>\n      </div>\n<h2></h2>\n<div class="gatsby-highlight" data-language="bash">\n      <pre class="language-bash"><code class="language-bash"></code></pre>\n      </div>\n<h2></h2>\n<div class="gatsby-highlight" data-language="bash">\n      <pre class="language-bash"><code class="language-bash"></code></pre>\n      </div>\n<h2></h2>\n<div class="gatsby-highlight" data-language="bash">\n      <pre class="language-bash"><code class="language-bash"></code></pre>\n      </div>\n<h2></h2>\n<div class="gatsby-highlight" data-language="bash">\n      <pre class="language-bash"><code class="language-bash"></code></pre>\n      </div>\n<h2></h2>\n<div class="gatsby-highlight" data-language="bash">\n      <pre class="language-bash"><code class="language-bash"></code></pre>\n      </div>',
frontmatter:{title:"Cypress"}},footnote:{id:"/home/mathews/website1/content/parts/footnote.md absPath of file >>> MarkdownRemark",html:""},site:{siteMetadata:{facebook:{appId:""}}}},pathContext:{slug:"/cypress/"}}}});
//# sourceMappingURL=path---cypress-d6dc3c0f97aeb1736f39.js.map